FROM   balenalib/armv7hf-debian:buster

# Enable building ARM container on x86 machinery on the web (comment out next line if built on Raspberry)
RUN [ "cross-build-start" ]

# Following lines are from original Docker image : https://github.com/jeedom/core/blob/release/Dockerfile
ENV SHELL_ROOT_PASSWORD Mjeedom96
ENV APACHE_PORT 80
ENV SSH_PORT 2222
ENV MODE_HOST 0

# NOTE : default-mysql-client instead of mysql-client (not found on rpi build)
RUN apt-get update && apt-get install -y wget openssh-server supervisor default-mysql-client

# Install
RUN echo "root:${SHELL_ROOT_PASSWORD}" | chpasswd && \
  sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config && \
  sed -i 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' /etc/pam.d/sshd

RUN mkdir -p /var/run/sshd /var/log/supervisor
WORKDIR /etc
RUN rm /etc/motd && wget -q https://raw.githubusercontent.com/jeedom/core/release/install/motd 

WORKDIR /etc/supervisor/conf.d
RUN wget -q https://raw.githubusercontent.com/jeedom/core/release/install/OS_specific/Docker/supervisord.conf

WORKDIR /root
RUN rm -f /root/.bashrc && wget -O .bashrc -q https://raw.githubusercontent.com/jeedom/core/release/install/bashrc

RUN wget -O install_docker.sh -q https://raw.githubusercontent.com/jeedom/core/release/install/install.sh && chmod +x /root/install_docker.sh
RUN /root/install_docker.sh -s 1;exit 0
RUN /root/install_docker.sh -s 2;exit 0
RUN /root/install_docker.sh -s 4;exit 0
RUN /root/install_docker.sh -s 5;exit 0
RUN /root/install_docker.sh -s 7;exit 0
RUN /root/install_docker.sh -s 10;exit 0
RUN systemctl disable apache2;exit 0
RUN systemctl disable sshd;exit 0

RUN wget -q https://raw.githubusercontent.com/jeedom/core/release/install/OS_specific/Docker/init.sh && chmod +x /root/init.sh

RUN apt-get clean && rm -rf /var/lib/apt/lists/*
    
CMD ["/root/init.sh"]

# Preload homebridge install script
ADD plugins/homebridge/install_homebridge.sh /tmp/install_homebridge.sh

## Preinstall dependencies
RUN apt-get update && apt-get -y dist-upgrade && \
# Mysql client & git
    apt-get install --no-install-recommends -y default-mysql-client git && \
# Plugin Network : fix ping
    apt-get install --no-install-recommends -y iputils-ping && \
# Plugin Z wave
# RPI : pre-install build dependencies on rpi
    apt-get install --no-install-recommends -y git python-pip python-dev python-pyudev python-setuptools python-louie \
    make build-essential libudev-dev g++ gcc python-lxml unzip libjpeg-dev python-serial python-requests && \
    pip install wheel urwid louie six tornado && \
# end of RPI  
    mkdir -p /tmp/jeedom/openzwave/ && cd /tmp && \
    git clone https://github.com/jeedom/plugin-openzwave.git && cd plugin-openzwave && git checkout master && cd resources && \
    chmod u+x ./install_apt.sh && ./install_apt.sh && cd /tmp && rm -Rf plugin-openzwave \
# Plugin Homebridge
    cd tmp && chmod u+x ./install_homebridge.sh && ./install_homebridge.sh \
#   echo "\
#Package: nodejs \n\
#Pin: origin deb.nodesource.com \n\
#Pin-Priority: 600 \n" >> /etc/apt/preferences.d/nodesource && \
#    apt-get install --no-install-recommends -y build-essential avahi-daemon lsb-release avahi-discover avahi-utils \
#    libnss-mdns libavahi-compat-libdnssd-dev dialog apt-utils curl && \
#    curl -sL https://deb.nodesource.com/setup_12.x | bash - && \
#    apt-get install --no-install-recommends -y nodejs && \
#    npm install -g npm && \
# Camera 
     apt-get install --no-install-recommends -y ffmpeg libav-tools python-imaging python-pil php-gd  && \
# Freebox OS
     apt-get install --no-install-recommends -y  android-tools-adb netcat  && \
# Reduce image size
    apt-get clean && rm -rf /var/lib/apt/lists/*
    

# stop processing ARM emulation (comment out next line if built on Raspberry)
RUN [ "cross-build-end" ]
